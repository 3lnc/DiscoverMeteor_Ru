---
title: Использование Git и GitHub
slug: github
date: 0003/01/02
number: 3.5
sidebar: true
contents: Узнайте как пользоваться сервисом GitHub чтобы лучше понимать о чем идет речь в следующих главах
paragraphs: 32
---

[GitHub](https://github.com/) это социальный репозиторий для проектов с открытым исходным кодом, использующих [Git](http://git-scm.com/) для контроля версий исходного кода. Главная задача GitHub - сделать процесс разработки простым и увлекательным, в особенности когда над проектом одновременно работает несколько человек. GitHub также помогает научиться многим вещам. В этой главе мы пробежимся по некоторым фишкам GitHub, чтобы вам было легче следить за развитием событий книги *Discover Meteor*.

Эта глава подразумевает что вы малознакомы или совсем не знакомы с Git и GitHub. Если вы уже общаетесь на "ты" с обоими, можете смело пропустить эту главу!

### Коммиты

Базовым кирпичиком git репозитория является *коммит* (*commit*). Его можно представить как фотоснимок всего вашего кода в отдельный момент времени. Код со временем меняется, но если вы делаете коммиты то к любому из них можно вернуться, отмотав время назад с помощью волшебства git.

Вместо того чтобы просто выдать вам законченный код от Microscope, мы сделали множество снимков кода на каждом шагу. Все эти снимки доступны на GitHub.

Например, вот так выглядит [последний коммит предыдущей главы](https://github.com/DiscoverMeteor/Microscope/commit/chapter3-2):

<%= screenshot "s3-1", "A Git commit as shown on GitHub." %>

Вы видите "diff" (от слова "difference" - "разница") файла `post_item.js`, или иными словами изменения, которые произошли с этим файлом в результате последнего коммита. В нашем случае мы создали файл `post_item.js` с чистого листа, поэтому всё его содержимое подсвечено зелёным.

Давайте посмотрим на другой пример из [будущей главы](https://github.com/DiscoverMeteor/Microscope/commit/chapter13-1):

<%= screenshot "s3-2", "Modifying code." %>

В этот раз зелёным подсвечены только те строчки кода которые были изменены.

Иногда строчки кода не только добавляются или изменяются, но и [удаляются](https://github.com/DiscoverMeteor/Microscope/commit/chapter12-2):

<%= screenshot "s3-3", "Deleting code." %>

Мы только что познакомились с одной из фишек GitHub - легко видеть и находить изменения в коде.

### Обзор кода в коммите

По умолчанию git коммит показывает только изменения в коде, но иногда вам может захотеться посмотреть на файлы, которые *не* изменились. Просто чтобы удостовериться что их содержимое именно такое, каким вы ожидаете его увидеть.

GitHub поможет нам и в этом. Когда вы находитесь на странице коммита, нажмите **Browse code**:

<%= screenshot "s3-5", "The Browse code button." %>

Теперь у вас есть доступ к репозиторию в том виде, в котором он был *на момент этого конкретного коммита*:

<%= screenshot "s3-6", "The repository at commit 3-2." %>

На первый взгляд может оказаться не совсем ясно что мы смотрим на коммит. Но если мы сравним репозиторий с главной *мастер* веткой то сразу же будет видно что файлы выглядят по-другому:

<%= screenshot "s3-7", "The repository at commit 14-2." %>

### Accessing A Commit Locally

////

////

~~~bash
$ git clone git@github.com:DiscoverMeteor/Microscope.git github_microscope
~~~

////

////

~~~bash
$ cd github_microscope
~~~

////

////

~~~bash
$ git checkout chapter3-1
Note: checking out 'chapter3-1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a004b56... Added basic posts list template and static data.
~~~

////

////

////

////

<%= screenshot "s3-4", "Finding a commit hash." %>

////

~~~bash
$ git checkout c7af59e425cd4e17c20cf99e51c8cd78f82c9932
Previous HEAD position was a004b56... Added basic posts list template and static data.
HEAD is now at c7af59e... Augmented the postsList route to take a limit
~~~

////

~~~bash
$ git checkout master
~~~

### Historical Perspective

////

////

<%= screenshot "s3-8", "GitHub's History button." %>

////

<%= screenshot "s3-9", "Displaying a file's history." %>

### The Blame Game

////

<%= screenshot "s3-10", "GitHub's Blame button." %>

////

<%= screenshot "s3-11", "GitHub's Blame view." %>

////
